{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst DevURL = 'http://localhost:3002/Admin_API/SupportManagement/';\nconst StageURL = 'http://aquila-admin.pptssolutions.com/Admin_API/SupportManagement/';\nconst TempURL = 'http://aquila.pptssolutions.com/Admin_API/SupportManagement/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let SupportManagementService = /*#__PURE__*/(() => {\n  class SupportManagementService {\n    constructor(http) {\n      this.http = http;\n      this.API_URL = environment.apiUrl + 'Admin_API/SupportManagement/';\n    }\n\n    All_CustomerSupport_List(data) {\n      return this.http.post(this.API_URL + 'All_SupportManagement_List', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    SupportTitle_List() {\n      return this.http.post(this.API_URL + 'SimpleList_For_SupportTitle', httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    SupportTitle_Create(data) {\n      return this.http.post(this.API_URL + 'SupportTitle_Create', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    CustomerSupport_Update(data) {\n      return this.http.post(this.API_URL + 'User_Update_Support', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    CustomerSupport_Closed(data) {\n      return this.http.post(this.API_URL + 'Customer_Support_Closed', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Customer_List(data) {\n      return this.http.post(this.API_URL + 'FilteredCustomer_List', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Title_List(data) {\n      return this.http.post(this.API_URL + 'Title_List', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Key_List(data) {\n      return this.http.post(this.API_URL + 'Key_List', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    TitleKey_List(data) {\n      return this.http.post(this.API_URL + 'SupportKeyAndSupport_Title_List', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n  }\n\n  SupportManagementService.ɵfac = function SupportManagementService_Factory(t) {\n    return new (t || SupportManagementService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  SupportManagementService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SupportManagementService,\n    factory: SupportManagementService.ɵfac,\n    providedIn: 'root'\n  });\n  return SupportManagementService;\n})();","map":null,"metadata":{},"sourceType":"module"}