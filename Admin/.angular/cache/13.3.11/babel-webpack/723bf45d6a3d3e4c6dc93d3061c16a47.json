{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"../../../services/user-management/user-management.service\";\nimport * as i3 from \"../../../services/login-management/login-manage.service\";\nimport * as i4 from \"../../../services/common-services/toastr.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/icon\";\n\nfunction ModalUserManagementComponent_section_0_mat_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const Gender_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", Gender_r9.Key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", Gender_r9.Name, \"\");\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_mat_icon_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-icon\", 43);\n    i0.ɵɵlistener(\"click\", function ModalUserManagementComponent_section_0_mat_icon_44_Template_mat_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.ShowPassword = true;\n    });\n    i0.ɵɵtext(1, \"visibility \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_mat_icon_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-icon\", 43);\n    i0.ɵɵlistener(\"click\", function ModalUserManagementComponent_section_0_mat_icon_45_Template_mat_icon_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.ShowPassword = false;\n    });\n    i0.ɵɵtext(1, \"visibility_off \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_mat_error_52_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Retype Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_mat_error_52_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Password does not match!!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_mat_error_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ModalUserManagementComponent_section_0_mat_error_52_span_1_Template, 2, 0, \"span\", 0);\n    i0.ɵɵtemplate(2, ModalUserManagementComponent_section_0_mat_error_52_span_2_Template, 2, 0, \"span\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.UserForm.controls[\"RetypePassword\"].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.UserForm.controls[\"RetypePassword\"].errors.notSame);\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_mat_option_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const Status_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", Status_r17.Key);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", Status_r17.Name, \"\");\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_span_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_span_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalUserManagementComponent_section_0_span_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Loading... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\n\nfunction ModalUserManagementComponent_section_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"section\")(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3)(4, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function ModalUserManagementComponent_section_0_Template_div_click_4_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.modalRef.hide();\n    });\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"span\");\n    i0.ɵɵelement(7, \"i\", 6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"div\", 7)(9, \"h1\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9)(13, \"div\", 10)(14, \"div\", 11)(15, \"div\", 12);\n    i0.ɵɵelement(16, \"input\", 13)(17, \"mat-error\", 14);\n    i0.ɵɵelementStart(18, \"span\", 15);\n    i0.ɵɵelement(19, \"img\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(20, \"div\", 11)(21, \"div\", 12);\n    i0.ɵɵelement(22, \"input\", 17)(23, \"mat-error\", 14);\n    i0.ɵɵelementStart(24, \"span\", 15);\n    i0.ɵɵelement(25, \"img\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(26, \"div\", 11)(27, \"div\", 12);\n    i0.ɵɵelement(28, \"input\", 18)(29, \"mat-error\", 14);\n    i0.ɵɵelementStart(30, \"span\", 15);\n    i0.ɵɵelement(31, \"img\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(32, \"div\", 11)(33, \"div\", 12)(34, \"mat-select\", 20)(35, \"mat-option\");\n    i0.ɵɵtext(36, \"Select Gender \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(37, ModalUserManagementComponent_section_0_mat_option_37_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"mat-error\", 14);\n    i0.ɵɵelementStart(39, \"span\", 15);\n    i0.ɵɵelement(40, \"img\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(41, \"div\", 11)(42, \"div\", 12);\n    i0.ɵɵelement(43, \"input\", 22);\n    i0.ɵɵtemplate(44, ModalUserManagementComponent_section_0_mat_icon_44_Template, 2, 0, \"mat-icon\", 23);\n    i0.ɵɵtemplate(45, ModalUserManagementComponent_section_0_mat_icon_45_Template, 2, 0, \"mat-icon\", 24);\n    i0.ɵɵelement(46, \"mat-error\", 14);\n    i0.ɵɵelementStart(47, \"span\", 15);\n    i0.ɵɵelement(48, \"img\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(49, \"div\", 25)(50, \"div\", 12);\n    i0.ɵɵelement(51, \"input\", 26);\n    i0.ɵɵtemplate(52, ModalUserManagementComponent_section_0_mat_error_52_Template, 3, 2, \"mat-error\", 0);\n    i0.ɵɵelementStart(53, \"span\", 15);\n    i0.ɵɵelement(54, \"img\", 16);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(55, \"div\", 11)(56, \"div\", 12);\n    i0.ɵɵelement(57, \"input\", 27)(58, \"mat-error\", 14);\n    i0.ɵɵelementStart(59, \"span\", 15);\n    i0.ɵɵelement(60, \"img\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(61, \"div\", 11)(62, \"div\", 12)(63, \"mat-select\", 28)(64, \"mat-option\");\n    i0.ɵɵtext(65, \"Select Your Status \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(66, ModalUserManagementComponent_section_0_mat_option_66_Template, 2, 2, \"mat-option\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(67, \"mat-error\", 14);\n    i0.ɵɵelementStart(68, \"span\", 15);\n    i0.ɵɵelement(69, \"img\", 29);\n    i0.ɵɵelementEnd()()()()()()();\n    i0.ɵɵelementStart(70, \"div\", 30)(71, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ModalUserManagementComponent_section_0_Template_button_click_71_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.onSubmit();\n    });\n    i0.ɵɵtemplate(72, ModalUserManagementComponent_section_0_span_72_Template, 2, 0, \"span\", 0);\n    i0.ɵɵtemplate(73, ModalUserManagementComponent_section_0_span_73_Template, 2, 0, \"span\", 0);\n    i0.ɵɵtemplate(74, ModalUserManagementComponent_section_0_span_74_Template, 2, 0, \"span\", 0);\n    i0.ɵɵelementStart(75, \"span\");\n    i0.ɵɵelement(76, \"i\", 32);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(77, \"svg\", 33)(78, \"defs\")(79, \"style\");\n    i0.ɵɵtext(80, \" .cls-1 { fill: #f2940c; } .cls-2 { fill: #efaa0f; } .cls-3 { fill: #e58910; } \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(81, \"title\");\n    i0.ɵɵtext(82, \"web bg images\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(83, \"path\", 34)(84, \"path\", 35)(85, \"path\", 36)(86, \"path\", 37)(87, \"path\", 38)(88, \"path\", 39)(89, \"path\", 40)(90, \"path\", 41);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.UserForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.Type, \" User\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.GetFormControlErrorMessage(\"Name\"), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.GetFormControlErrorMessage(\"UserName\"), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.GetFormControlErrorMessage(\"Email\"), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.Genders);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.GetFormControlErrorMessage(\"Gender\"), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"type\", ctx_r0.ShowPassword ? \"text\" : \"password\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.ShowPassword);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.ShowPassword);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.GetFormControlErrorMessage(\"Password\"), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"type\", ctx_r0.ShowPassword ? \"text\" : \"password\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.UserForm.controls[\"RetypePassword\"].errors && ctx_r0.UserForm.controls[\"RetypePassword\"].touched);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.GetFormControlErrorMessage(\"Phone\"), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.User_Roles);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", ctx_r0.GetFormControlErrorMessage(\"User_Role\"), i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.UserForm.status !== \"VALID\" || ctx_r0.Uploading)(\"ngClass\", i0.ɵɵpureFunction1(21, _c0, ctx_r0.UserForm.status !== \"VALID\" || ctx_r0.Uploading));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.Type === \"Create\" && !ctx_r0.Uploading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.Type === \"Edit\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.Uploading);\n  }\n}\n\nexport let ModalUserManagementComponent = /*#__PURE__*/(() => {\n  class ModalUserManagementComponent {\n    constructor(modalRef, UserService, LoginService, Toastr) {\n      this.modalRef = modalRef;\n      this.UserService = UserService;\n      this.LoginService = LoginService;\n      this.Toastr = Toastr;\n      this.Uploading = false;\n      this.ShowPassword = false;\n      this.MobileNumeric = new RegExp('^[0-9 +]+$');\n      this.AlphaNumericUnderscoreHyphenDot = new RegExp('^[A-Za-z0-9_.-]+$');\n      this.AlphabetsSpaceHyphen = new RegExp('^[A-Za-z -]+$');\n      this.AlphaNumericSpaceHyphen = new RegExp('^[A-Za-z0-9 -]+$');\n      this.Numeric = new RegExp('^[0-9]+$');\n      this.User_Roles = [{\n        Name: 'Super Admin',\n        Key: 'Super_Admin'\n      }, {\n        Name: 'Staff',\n        Key: 'Staff'\n      }];\n      this.Genders = [{\n        Name: 'Male',\n        Key: 'Male'\n      }, {\n        Name: 'Female',\n        Key: 'Female'\n      }];\n      this.UserInfo = JSON.parse(this.LoginService.LoginUser_Info());\n    }\n\n    ngOnInit() {\n      this.onClose = new Subject();\n\n      if (this.Type === 'Create') {\n        this.UserForm = new FormGroup({\n          UserName: new FormControl('', {\n            validators: [Validators.required, this.CustomValidation('AlphaNumericUnderscoreHyphenDot')]\n          }),\n          Name: new FormControl('', Validators.required),\n          Gender: new FormControl('', Validators.required),\n          Email: new FormControl('', Validators.required),\n          Phone: new FormControl('', [Validators.required, this.CustomValidation('MobileNumeric'), Validators.maxLength(10)]),\n          User_Role: new FormControl('', Validators.required),\n          Password: new FormControl('', Validators.required),\n          User: new FormControl(this.UserInfo._id),\n          RetypePassword: new FormControl('', Validators.required),\n          User_Status: new FormControl('Activated')\n        });\n      }\n\n      if (this.Type === 'Edit') {\n        this.UserForm = new FormGroup({\n          User: new FormControl(this.UserDetails._id),\n          Name: new FormControl(this.UserDetails.Name, Validators.required),\n          UserName: new FormControl(this.UserDetails.UserName, Validators.required),\n          Gender: new FormControl(this.UserDetails.Gender, Validators.required),\n          Phone: new FormControl(this.UserDetails.Phone, Validators.required),\n          Email: new FormControl(this.UserDetails.Email, Validators.required),\n          User_Role: new FormControl(this.UserDetails.User_Role, Validators.required),\n          Password: new FormControl(this.UserDetails.Password, Validators.required),\n          RetypePassword: new FormControl(this.UserDetails.Password, Validators.required),\n          User_Status: new FormControl(this.UserDetails.User_Status)\n        });\n      }\n\n      this.UserForm.setValidators(this.passwordMatchValidator());\n    }\n\n    onSubmit() {\n      if (this.Type === 'Create') {\n        this.Submit();\n      }\n\n      if (this.Type === 'Edit') {\n        this.Update();\n      }\n    }\n\n    Submit() {\n      if (this.UserForm.valid && !this.Uploading) {\n        this.Uploading = true;\n        const Info = this.UserForm.value;\n        this.UserService.User_Create(Info).subscribe(response => {\n          this.Uploading = false;\n\n          if (response.Status) {\n            this.Toastr.NewToastrMessage({\n              Type: 'Success',\n              Message: 'New User Successfully Created'\n            });\n            this.onClose.next({\n              Status: true,\n              Response: response.Response\n            });\n            this.modalRef.hide();\n          } else {\n            if (response.Message === undefined || response.Message === '' || response.Message === null) {\n              response.Message = 'Some Error Occoured!, But not Identified.';\n            }\n\n            this.Toastr.NewToastrMessage({\n              Type: 'Error',\n              Message: response.Message\n            });\n            this.onClose.next({\n              Status: false,\n              Message: 'UnExpected Error!'\n            });\n            this.modalRef.hide();\n          }\n        });\n      } else {\n        Object.keys(this.UserForm.controls).map(obj => {\n          const FControl = this.UserForm.controls[obj];\n\n          if (FControl.invalid) {\n            FControl.markAsTouched();\n            FControl.markAsDirty();\n          }\n        });\n      }\n    }\n\n    passwordMatchValidator() {\n      return FGroup => {\n        const password = FGroup.get('Password').value;\n        const confirmPassword = FGroup.get('RetypePassword').value;\n\n        if (password !== '' && confirmPassword !== '') {\n          if (password !== confirmPassword) {\n            FGroup.get('RetypePassword').markAsTouched();\n            FGroup.get('RetypePassword').setErrors({\n              notSame: true\n            });\n          } else {\n            FGroup.get('RetypePassword').setErrors(null);\n          }\n        }\n\n        return;\n      };\n    }\n\n    Update() {\n      if (this.UserForm.valid && !this.Uploading) {\n        this.Uploading = true;\n        const Info = this.UserForm.value;\n        this.UserService.User_Update(Info).subscribe(response => {\n          this.Uploading = false;\n\n          if (response.Status) {\n            this.onClose.next({\n              Status: true,\n              Response: response.Response\n            });\n            this.Toastr.NewToastrMessage({\n              Type: 'Success',\n              Message: 'User details Successfully Updated'\n            });\n            this.modalRef.hide();\n          } else {\n            if (response.error.Message === undefined || response.error.Message === '' || response.error.Message === null) {\n              response.error.Message = 'Some Error Occoured!, But not Identified.';\n            }\n\n            this.Toastr.NewToastrMessage({\n              Type: 'Error',\n              Message: response.error.Message\n            });\n            this.onClose.next({\n              Status: false,\n              Message: 'UnExpected Error!'\n            });\n            this.modalRef.hide();\n          }\n        });\n      } else {\n        Object.keys(this.UserForm.controls).map(obj => {\n          const FControl = this.UserForm.controls[obj];\n\n          if (FControl.invalid) {\n            FControl.markAsTouched();\n            FControl.markAsDirty();\n          }\n        });\n      }\n    }\n\n    CustomValidation(Condition) {\n      if (Condition === 'AlphabetsSpaceHyphen') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.AlphabetsSpaceHyphen.test(control.value)) {\n            return {\n              AlphabetsSpaceHyphenError: true\n            };\n          }\n\n          return null;\n        };\n      }\n\n      if (Condition === 'AlphaNumericUnderscoreHyphenDot') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.AlphaNumericUnderscoreHyphenDot.test(control.value)) {\n            return {\n              AlphaNumericUnderscoreHyphenDotError: true\n            };\n          }\n\n          return null;\n        };\n      }\n\n      if (Condition === 'Numeric') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.Numeric.test(control.value)) {\n            return {\n              NumericError: true\n            };\n          }\n\n          return null;\n        };\n      }\n\n      if (Condition === 'AlphaNumericSpaceHyphen') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.AlphaNumericSpaceHyphen.test(control.value)) {\n            return {\n              AlphaNumericSpaceHyphenError: true\n            };\n          }\n\n          return null;\n        };\n      }\n\n      if (Condition === 'MobileNumeric') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.MobileNumeric.test(control.value)) {\n            return {\n              MobileNumericError: true\n            };\n          }\n\n          return null;\n        };\n      }\n    }\n\n    GetFormControlErrorMessage(KeyName) {\n      const FControl = this.UserForm.get(KeyName);\n\n      if (FControl.invalid && FControl.touched) {\n        const ErrorKeys = FControl.errors !== null ? Object.keys(FControl.errors) : [];\n\n        if (ErrorKeys.length > 0) {\n          let returnText = '';\n\n          if (ErrorKeys.indexOf('required') > -1) {\n            returnText = 'This field is required';\n          } else if (ErrorKeys.indexOf('AlphabetsSpaceHyphenError') > -1) {\n            returnText = 'Please Enter Only Alphabets, Space and Hyphen!';\n          } else if (ErrorKeys.indexOf('AlphaNumericUnderscoreHyphenDotError') > -1) {\n            returnText = 'Please Enter Only Alphabets, Numerics, Space, Hyphen and Dot!';\n          } else if (ErrorKeys.indexOf('MobileNumericError') > -1) {\n            returnText = 'Please Enter Only Numeric, Spaces and +!';\n          } else if (ErrorKeys.indexOf('NumericError') > -1) {\n            returnText = 'Please Enter Only Numbers!';\n          } else if (ErrorKeys.indexOf('minlength') > -1) {\n            returnText = 'Enter the value should be greater than ' + FControl.errors.minlength.requiredLength;\n          } else if (ErrorKeys.indexOf('maxlength') > -1) {\n            returnText = 'Enter the value should be less than ' + FControl.errors.maxlength.requiredLength;\n          } else if (ErrorKeys.indexOf('email') > -1) {\n            returnText = 'Please Enter Valid Email!';\n          } else if (ErrorKeys.indexOf('AlphaNumericSpaceHyphenError') > -1) {\n            returnText = 'Please Enter Only Alphabets, Numerics, Space and Hyphen!';\n          } else {\n            returnText = 'Undefined error detected!';\n          }\n\n          return returnText;\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    }\n\n    CommonInputReset(control, value) {\n      this.UserForm.controls[control].setValue(value);\n      this.UserForm.controls[control].clearValidators();\n      this.UserForm.controls[control].setErrors(null);\n      this.UserForm.controls[control].markAsPristine();\n      this.UserForm.controls[control].markAsUntouched();\n      this.UserForm.controls[control].updateValueAndValidity();\n    }\n\n    NotAllow() {\n      return false;\n    }\n\n    ClearInput(event) {\n      const Events = event.composedPath();\n      const Input = Events[0];\n      const FControl = Input.attributes;\n      const FControlName = FControl.getNamedItem('formcontrolname').textContent;\n      this.UserForm.controls[FControlName].setValue(null);\n      return false;\n    }\n\n  }\n\n  ModalUserManagementComponent.ɵfac = function ModalUserManagementComponent_Factory(t) {\n    return new (t || ModalUserManagementComponent)(i0.ɵɵdirectiveInject(i1.BsModalRef), i0.ɵɵdirectiveInject(i2.UserManagementService), i0.ɵɵdirectiveInject(i3.LoginManageService), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  ModalUserManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalUserManagementComponent,\n    selectors: [[\"app-modal-user-management\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"limiter\", 2, \"display\", \"block\"], [1, \"custom-modal\", \"modal-container\"], [1, \"form-horizontal\", 3, \"formGroup\"], [1, \"modal-close-btn\", 3, \"click\"], [1, \"close-icon\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-close\"], [1, \"content-area\"], [1, \"modal-content-body\"], [1, \"content\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"NAME\", \"autocomplete\", \"off\", \"formControlName\", \"Name\"], [3, \"innerHTML\"], [1, \"us-icon\"], [\"src\", \"../../../assets/images/icon/ic_edit_name.svg\", \"alt\", \"\"], [\"type\", \"text\", \"placeholder\", \"USER NAME\", \"autocomplete\", \"off\", \"formControlName\", \"UserName\"], [\"type\", \"text\", \"placeholder\", \"EMAIL\", \"autocomplete\", \"off\", \"formControlName\", \"Email\"], [\"src\", \"../../../assets/images/icon/ic_edit_mobilenumber.svg\", \"alt\", \"\"], [\"formControlName\", \"Gender\", \"placeholder\", \"SELECT GENDER\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"Password\", \"autocomplete\", \"off\", \"placeholder\", \"Password\", 3, \"type\"], [\"style\", \" cursor: pointer; float: right; margin-top: -33px; position: relative;\\n                              left: -5px;\", \"matSuffix\", \"\", 3, \"click\", 4, \"ngIf\"], [\"style\", \"cursor: pointer; float: right; margin-top: -33px; position: relative;\\n                              left: -5px;\", \"matSuffix\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"col-lg-6\"], [\"type\", \"text\", \"formControlName\", \"RetypePassword\", \"autocomplete\", \"off\", \"placeholder\", \"RETYPE PASSWORD\", 3, \"type\"], [\"type\", \"text\", \"placeholder\", \"MOBILE NAME\", \"autocomplete\", \"off\", \"formControlName\", \"Phone\"], [\"formControlName\", \"User_Role\", \"placeholder\", \"SELECT STATUS\"], [\"src\", \"../../../assets/images/icon/ic_edit_branchname.svg\", \"alt\", \"\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn-blue\", 3, \"disabled\", \"ngClass\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-search\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"id\", \"Layer_1\", \"data-name\", \"Layer 1\", \"viewBox\", \"0 0 1920 80.97\", 1, \"bk-waves-yellow\"], [\"d\", \"M0,26.27q8.58-1.56,17-3-8.43,1.9-17,4Z\", 1, \"cls-1\"], [\"d\", \"M1920,26.27V81H0V26.27q13-2.36,25.59-4.39C211.19,59,361.59,64.1,465.42,61.8c36.44-.81,68.89-2.57,98.36-4.92C731,43.52,802.22,10.9,960,23.16c17.07,1.32,35.15,3.17,54.48,5.63,119.59,15.21,185.88,40.8,321,30,7.32-.59,14.21-1.23,20.71-1.92,101.7-10.79,110-33.76,237.32-46.09C1631.11,7.15,1745.7-2,1894.41,21.88Q1907,23.92,1920,26.27Z\", 1, \"cls-2\"], [\"d\", \"M1920,16.61V81H0V26.27q13-2.36,25.59-4.39C174.3-2,288.89,7.15,326.46,10.79c127.33,12.33,135.62,35.3,237.32,46.09,6.5.69,13.39,1.33,20.71,1.92,135.15,10.79,201.44-14.8,321-30,19.33-2.46,37.41-4.31,54.48-5.63,157.78-12.26,229,20.36,396.22,33.72,29.47,2.35,61.92,4.11,98.36,4.92,103.83,2.3,254.23-2.79,439.83-39.92Q1907.1,19.35,1920,16.61Z\", 1, \"cls-1\"], [\"d\", \"M905.52,28.79c18.66-2.37,36.16-4.18,52.7-5.49-16.54,1.76-34,4.19-52.7,7.39-119.59,20.49-185.88,55-321,40.42-7.32-.79-14.21-1.66-20.71-2.58C490.87,58.11,466,39.26,410.79,23.3c55.18,11.85,80.08,25.84,153,33.58,6.5.69,13.39,1.33,20.71,1.92C719.64,69.59,785.93,44,905.52,28.79Z\", 1, \"cls-3\"], [\"d\", \"M1887.31,23.29C1705,71.56,1557.08,78.21,1454.58,75.15c-36.44-1.09-68.89-3.46-98.36-6.62-112.67-12.13-181.75-36-263.08-45.27,81.33,6.88,150.41,24.62,263.08,33.62,29.47,2.35,61.92,4.11,98.36,4.92C1557.08,64.07,1705,59.14,1887.31,23.29Z\", 1, \"cls-3\"], [\"d\", \"M326.46,6.45C362.5,11.15,389,17,410.79,23.3c-21.78-4.68-48.29-9-84.33-12.51C288.89,7.15,174.3-2,25.59,21.88q-4.28.69-8.58,1.42c2.87-.66,5.73-1.29,8.58-1.91C174.3-10.79,288.89,1.55,326.46,6.45Z\", 1, \"cls-2\"], [\"d\", \"M1093.14,23.26c-39.39-3.32-81.66-4.1-133.14-.1l-1.78.14,1.78-.19C1011.48,17.72,1053.75,18.77,1093.14,23.26Z\", 1, \"cls-1\"], [\"d\", \"M1920,14.29v2.32q-12.9,2.75-25.59,5.27l-7.1,1.41,7.1-1.9Q1907.1,18,1920,14.29Z\", 1, \"cls-1\"], [3, \"value\"], [\"matSuffix\", \"\", 2, \"cursor\", \"pointer\", \"float\", \"right\", \"margin-top\", \"-33px\", \"position\", \"relative\", \"left\", \"-5px\", 3, \"click\"]],\n    template: function ModalUserManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ModalUserManagementComponent_section_0_Template, 91, 23, \"section\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.Type && (ctx.Type === \"Create\" || ctx.Type === \"Edit\"));\n      }\n    },\n    directives: [i5.NgIf, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlName, i7.MatError, i8.MatSelect, i9.MatOption, i5.NgForOf, i10.MatIcon, i7.MatSuffix, i5.NgClass],\n    styles: [\"\"]\n  });\n  return ModalUserManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}