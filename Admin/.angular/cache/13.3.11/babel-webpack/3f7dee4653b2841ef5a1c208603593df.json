{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst DevURL = 'http://localhost:3002/Admin_API/IndustryManagement/';\nconst StageURL = 'http://aquila-admin.pptssolutions.com/Admin_API/IndustryManagement/';\nconst TempURL = 'http://aquila.pptssolutions.com/Admin_API/IndustryManagement/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let IndustryServiceService = /*#__PURE__*/(() => {\n  class IndustryServiceService {\n    constructor(http) {\n      this.http = http;\n      this.API_URL = environment.apiUrl + 'Admin_API/IndustryManagement/';\n    }\n\n    All_Industry_List(data) {\n      return this.http.post(this.API_URL + 'List', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Industry_Create(data) {\n      return this.http.post(this.API_URL + 'Create', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Industry_Edit(data) {\n      return this.http.post(this.API_URL + 'Edit', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Industry_Update(data) {\n      return this.http.post(this.API_URL + 'Update', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Industry_ActiveStatus(data) {\n      return this.http.post(this.API_URL + 'Active', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Industry_InActiveStatus(data) {\n      return this.http.post(this.API_URL + 'InActive', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n  }\n\n  IndustryServiceService.ɵfac = function IndustryServiceService_Factory(t) {\n    return new (t || IndustryServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  IndustryServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IndustryServiceService,\n    factory: IndustryServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return IndustryServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}