{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"src/app/services/customer-management/customer-management.service\";\nimport * as i3 from \"src/app/services/login-management/login-manage.service\";\nimport * as i4 from \"src/app/services/common-services/toastr.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\n\nfunction ModalBusinessEditComponent_section_0_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Update\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ModalBusinessEditComponent_section_0_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Loading... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\n\nfunction ModalBusinessEditComponent_section_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"section\")(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3)(4, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function ModalBusinessEditComponent_section_0_Template_div_click_4_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.modalRef.hide();\n    });\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"span\");\n    i0.ɵɵelement(7, \"i\", 6);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(8, \"div\", 7)(9, \"h1\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 8)(12, \"div\", 9)(13, \"div\", 10)(14, \"div\", 11)(15, \"div\", 12);\n    i0.ɵɵelement(16, \"input\", 13);\n    i0.ɵɵelementStart(17, \"span\", 14);\n    i0.ɵɵelement(18, \"img\", 15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 11)(20, \"div\", 12);\n    i0.ɵɵelement(21, \"input\", 16);\n    i0.ɵɵelementStart(22, \"span\", 14);\n    i0.ɵɵelement(23, \"img\", 17);\n    i0.ɵɵelementEnd()()()()()()();\n    i0.ɵɵelementStart(24, \"div\", 18)(25, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ModalBusinessEditComponent_section_0_Template_button_click_25_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onSubmit();\n    });\n    i0.ɵɵtemplate(26, ModalBusinessEditComponent_section_0_span_26_Template, 2, 0, \"span\", 0);\n    i0.ɵɵtemplate(27, ModalBusinessEditComponent_section_0_span_27_Template, 2, 0, \"span\", 0);\n    i0.ɵɵelementStart(28, \"span\");\n    i0.ɵɵelement(29, \"i\", 20);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(30, \"svg\", 21)(31, \"defs\")(32, \"style\");\n    i0.ɵɵtext(33, \" .cls-1 { fill: #f2940c; } .cls-2 { fill: #efaa0f; } .cls-3 { fill: #e58910; } \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"title\");\n    i0.ɵɵtext(35, \"web bg images\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(36, \"path\", 22)(37, \"path\", 23)(38, \"path\", 24)(39, \"path\", 25)(40, \"path\", 26)(41, \"path\", 27)(42, \"path\", 28)(43, \"path\", 29);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.BusinessForm);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r0.Type, \" Details\");\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.BusinessForm.status !== \"VALID\" || ctx_r0.Uploading)(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r0.BusinessForm.status !== \"VALID\" || ctx_r0.Uploading));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.Type === \"Edit\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.Uploading);\n  }\n}\n\nexport let ModalBusinessEditComponent = /*#__PURE__*/(() => {\n  class ModalBusinessEditComponent {\n    constructor(modalRef, CustomerService, LoginService, Toastr) {\n      this.modalRef = modalRef;\n      this.CustomerService = CustomerService;\n      this.LoginService = LoginService;\n      this.Toastr = Toastr;\n      this.Uploading = false;\n      this.MobileNumeric = new RegExp('^[0-9 +]+$');\n      this.AlphaNumericUnderscoreHyphenDot = new RegExp('^[A-Za-z0-9_.-]+$');\n      this.AlphabetsSpaceHyphen = new RegExp('^[A-Za-z -]+$');\n      this.AlphaNumericSpaceHyphen = new RegExp('^[A-Za-z0-9 -]+$');\n      this.Numeric = new RegExp('^[0-9]+$');\n      this.UserInfo = JSON.parse(this.LoginService.LoginUser_Info());\n    }\n\n    ngOnInit() {\n      this.onClose = new Subject();\n\n      if (this.Type === 'Edit') {\n        this.BusinessForm = new FormGroup({\n          BusinessId: new FormControl(this.BusinessId),\n          BusinessName: new FormControl(this.BusinessDetails.BusinessName),\n          BusinessCreditLimit: new FormControl(this.BusinessDetails.BusinessCreditLimit)\n        });\n      }\n    }\n\n    onSubmit() {\n      if (this.Type === 'Edit') {\n        this.Update();\n      }\n    }\n\n    Update() {\n      if (this.BusinessForm.valid && !this.Uploading) {\n        this.Uploading = true;\n        const Info = this.BusinessForm.value;\n        this.CustomerService.Business_Update(Info).subscribe(response => {\n          this.Uploading = false;\n\n          if (response.Status) {\n            this.onClose.next({\n              Status: true,\n              Response: response.Response\n            });\n            this.Toastr.NewToastrMessage({\n              Type: 'Success',\n              Message: 'User details Successfully Updated'\n            });\n            this.modalRef.hide();\n          } else {\n            if (response.error.Message === undefined || response.error.Message === '' || response.error.Message === null) {\n              response.error.Message = 'Some Error Occoured!, But not Identified.';\n            }\n\n            this.Toastr.NewToastrMessage({\n              Type: 'Error',\n              Message: response.error.Message\n            });\n            this.onClose.next({\n              Status: false,\n              Message: 'UnExpected Error!'\n            });\n            this.modalRef.hide();\n          }\n        });\n      } else {\n        Object.keys(this.BusinessForm.controls).map(obj => {\n          const FControl = this.BusinessForm.controls[obj];\n\n          if (FControl.invalid) {\n            FControl.markAsTouched();\n            FControl.markAsDirty();\n          }\n        });\n      }\n    }\n\n    CustomValidation(Condition) {\n      if (Condition === 'AlphabetsSpaceHyphen') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.AlphabetsSpaceHyphen.test(control.value)) {\n            return {\n              AlphabetsSpaceHyphenError: true\n            };\n          }\n\n          return null;\n        };\n      }\n\n      if (Condition === 'AlphaNumericUnderscoreHyphenDot') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.AlphaNumericUnderscoreHyphenDot.test(control.value)) {\n            return {\n              AlphaNumericUnderscoreHyphenDotError: true\n            };\n          }\n\n          return null;\n        };\n      }\n\n      if (Condition === 'Numeric') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.Numeric.test(control.value)) {\n            return {\n              NumericError: true\n            };\n          }\n\n          return null;\n        };\n      }\n\n      if (Condition === 'AlphaNumericSpaceHyphen') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.AlphaNumericSpaceHyphen.test(control.value)) {\n            return {\n              AlphaNumericSpaceHyphenError: true\n            };\n          }\n\n          return null;\n        };\n      }\n\n      if (Condition === 'MobileNumeric') {\n        return control => {\n          if (control.value !== '' && control.value !== null && !this.MobileNumeric.test(control.value)) {\n            return {\n              MobileNumericError: true\n            };\n          }\n\n          return null;\n        };\n      }\n    }\n\n    GetFormControlErrorMessage(KeyName) {\n      const FControl = this.BusinessForm.get(KeyName);\n\n      if (FControl.invalid && FControl.touched) {\n        const ErrorKeys = FControl.errors !== null ? Object.keys(FControl.errors) : [];\n\n        if (ErrorKeys.length > 0) {\n          let returnText = '';\n\n          if (ErrorKeys.indexOf('required') > -1) {\n            returnText = 'This field is required';\n          } else if (ErrorKeys.indexOf('AlphabetsSpaceHyphenError') > -1) {\n            returnText = 'Please Enter Only Alphabets, Space and Hyphen!';\n          } else if (ErrorKeys.indexOf('AlphaNumericUnderscoreHyphenDotError') > -1) {\n            returnText = 'Please Enter Only Alphabets, Numerics, Space, Hyphen and Dot!';\n          } else if (ErrorKeys.indexOf('MobileNumericError') > -1) {\n            returnText = 'Please Enter Only Numeric, Spaces and +!';\n          } else if (ErrorKeys.indexOf('NumericError') > -1) {\n            returnText = 'Please Enter Only Numbers!';\n          } else if (ErrorKeys.indexOf('minlength') > -1) {\n            returnText = 'Enter the value should be greater than ' + FControl.errors.minlength.requiredLength;\n          } else if (ErrorKeys.indexOf('maxlength') > -1) {\n            returnText = 'Enter the value should be less than ' + FControl.errors.maxlength.requiredLength;\n          } else if (ErrorKeys.indexOf('email') > -1) {\n            returnText = 'Please Enter Valid Email!';\n          } else if (ErrorKeys.indexOf('AlphaNumericSpaceHyphenError') > -1) {\n            returnText = 'Please Enter Only Alphabets, Numerics, Space and Hyphen!';\n          } else {\n            returnText = 'Undefined error detected!';\n          }\n\n          return returnText;\n        } else {\n          return '';\n        }\n      } else {\n        return '';\n      }\n    }\n\n    CommonInputReset(control, value) {\n      this.BusinessForm.controls[control].setValue(value);\n      this.BusinessForm.controls[control].clearValidators();\n      this.BusinessForm.controls[control].setErrors(null);\n      this.BusinessForm.controls[control].markAsPristine();\n      this.BusinessForm.controls[control].markAsUntouched();\n      this.BusinessForm.controls[control].updateValueAndValidity();\n    }\n\n    NotAllow() {\n      return false;\n    }\n\n    ClearInput(event) {\n      const Events = event.composedPath();\n      const Input = Events[0];\n      const FControl = Input.attributes;\n      const FControlName = FControl.getNamedItem('formcontrolname').textContent;\n      this.BusinessForm.controls[FControlName].setValue(null);\n      return false;\n    }\n\n  }\n\n  ModalBusinessEditComponent.ɵfac = function ModalBusinessEditComponent_Factory(t) {\n    return new (t || ModalBusinessEditComponent)(i0.ɵɵdirectiveInject(i1.BsModalRef), i0.ɵɵdirectiveInject(i2.CustomerManagementService), i0.ɵɵdirectiveInject(i3.LoginManageService), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  ModalBusinessEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalBusinessEditComponent,\n    selectors: [[\"app-modal-business-edit\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [1, \"limiter\", 2, \"display\", \"block\"], [1, \"custom-modal\", \"modal-container\"], [1, \"form-horizontal\", 3, \"formGroup\"], [1, \"modal-close-btn\", 3, \"click\"], [1, \"close-icon\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-close\"], [1, \"content-area\"], [1, \"modal-content-body\"], [1, \"content\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"type\", \"text\", \"placeholder\", \"BUSINESS NAME\", \"autocomplete\", \"off\", \"formControlName\", \"BusinessName\"], [1, \"us-icon\"], [\"src\", \"../../../assets/images/icon/ic_edit_name.svg\", \"alt\", \"\"], [\"type\", \"text\", \"placeholder\", \"CREDIT LIMIT\", \"autocomplete\", \"off\", \"formControlName\", \"BusinessCreditLimit\"], [\"src\", \"../../../assets/images/icon/ic_edit_mobilenumber.svg\", \"alt\", \"\"], [1, \"modal-footer\"], [\"type\", \"submit\", 1, \"btn-blue\", 3, \"disabled\", \"ngClass\", \"click\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-search\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"id\", \"Layer_1\", \"data-name\", \"Layer 1\", \"viewBox\", \"0 0 1920 80.97\", 1, \"bk-waves-yellow\"], [\"d\", \"M0,26.27q8.58-1.56,17-3-8.43,1.9-17,4Z\", 1, \"cls-1\"], [\"d\", \"M1920,26.27V81H0V26.27q13-2.36,25.59-4.39C211.19,59,361.59,64.1,465.42,61.8c36.44-.81,68.89-2.57,98.36-4.92C731,43.52,802.22,10.9,960,23.16c17.07,1.32,35.15,3.17,54.48,5.63,119.59,15.21,185.88,40.8,321,30,7.32-.59,14.21-1.23,20.71-1.92,101.7-10.79,110-33.76,237.32-46.09C1631.11,7.15,1745.7-2,1894.41,21.88Q1907,23.92,1920,26.27Z\", 1, \"cls-2\"], [\"d\", \"M1920,16.61V81H0V26.27q13-2.36,25.59-4.39C174.3-2,288.89,7.15,326.46,10.79c127.33,12.33,135.62,35.3,237.32,46.09,6.5.69,13.39,1.33,20.71,1.92,135.15,10.79,201.44-14.8,321-30,19.33-2.46,37.41-4.31,54.48-5.63,157.78-12.26,229,20.36,396.22,33.72,29.47,2.35,61.92,4.11,98.36,4.92,103.83,2.3,254.23-2.79,439.83-39.92Q1907.1,19.35,1920,16.61Z\", 1, \"cls-1\"], [\"d\", \"M905.52,28.79c18.66-2.37,36.16-4.18,52.7-5.49-16.54,1.76-34,4.19-52.7,7.39-119.59,20.49-185.88,55-321,40.42-7.32-.79-14.21-1.66-20.71-2.58C490.87,58.11,466,39.26,410.79,23.3c55.18,11.85,80.08,25.84,153,33.58,6.5.69,13.39,1.33,20.71,1.92C719.64,69.59,785.93,44,905.52,28.79Z\", 1, \"cls-3\"], [\"d\", \"M1887.31,23.29C1705,71.56,1557.08,78.21,1454.58,75.15c-36.44-1.09-68.89-3.46-98.36-6.62-112.67-12.13-181.75-36-263.08-45.27,81.33,6.88,150.41,24.62,263.08,33.62,29.47,2.35,61.92,4.11,98.36,4.92C1557.08,64.07,1705,59.14,1887.31,23.29Z\", 1, \"cls-3\"], [\"d\", \"M326.46,6.45C362.5,11.15,389,17,410.79,23.3c-21.78-4.68-48.29-9-84.33-12.51C288.89,7.15,174.3-2,25.59,21.88q-4.28.69-8.58,1.42c2.87-.66,5.73-1.29,8.58-1.91C174.3-10.79,288.89,1.55,326.46,6.45Z\", 1, \"cls-2\"], [\"d\", \"M1093.14,23.26c-39.39-3.32-81.66-4.1-133.14-.1l-1.78.14,1.78-.19C1011.48,17.72,1053.75,18.77,1093.14,23.26Z\", 1, \"cls-1\"], [\"d\", \"M1920,14.29v2.32q-12.9,2.75-25.59,5.27l-7.1,1.41,7.1-1.9Q1907.1,18,1920,14.29Z\", 1, \"cls-1\"]],\n    template: function ModalBusinessEditComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ModalBusinessEditComponent_section_0_Template, 44, 8, \"section\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.Type && ctx.Type === \"Edit\");\n      }\n    },\n    directives: [i5.NgIf, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlName, i5.NgClass],\n    styles: [\"\"]\n  });\n  return ModalBusinessEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}