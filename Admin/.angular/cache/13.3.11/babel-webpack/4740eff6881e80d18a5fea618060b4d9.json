{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst DevURL = 'http://localhost:3002/Admin_API/CustomerManagement/';\nconst StageURL = 'http://aquila-admin.pptssolutions.com/Admin_API/CustomerManagement/';\nconst TempURL = 'http://aquila.pptssolutions.com/Admin_API/CustomerManagement/';\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport let CustomerManagementService = /*#__PURE__*/(() => {\n  class CustomerManagementService {\n    constructor(http) {\n      this.http = http;\n      this.API_URL = environment.apiUrl + 'Admin_API/CustomerManagement/';\n    }\n\n    All_Customer_List(data) {\n      return this.http.post(this.API_URL + 'List', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    OwnerOfUsersList(data) {\n      return this.http.post(this.API_URL + 'OwnerOfUsersList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    UserBusinessList(data) {\n      return this.http.post(this.API_URL + 'AllOwnerAndUserOfBusinessList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    UserBranchList(data) {\n      return this.http.post(this.API_URL + 'AllOwnerAndUserAndBusinessOfBranchList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    InvoiceManagementList(data) {\n      return this.http.post(this.API_URL + 'InvoiceManagementList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    PaymentHistoryList(data) {\n      return this.http.post(this.API_URL + 'PaymentHistoryList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    View(data) {\n      return this.http.post(this.API_URL + 'View', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Customer_Update(data) {\n      return this.http.post(this.API_URL + 'CustomerDetailsUpdate', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Block(data) {\n      return this.http.post(this.API_URL + 'CustomerBlock', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    UnBlock(data) {\n      return this.http.post(this.API_URL + 'CustomerUnBlock', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    UserBusiness_Details(data) {\n      return this.http.post(this.API_URL + 'UserBusiness_Details', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    GetStates(data) {\n      return this.http.post(this.API_URL + 'State_List', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Branch_Update(data) {\n      return this.http.post(this.API_URL + 'Branch_Update', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    BranchDetails_Update(data) {\n      return this.http.post(this.API_URL + 'BranchDetails_Update', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    Business_Update(data) {\n      return this.http.post(this.API_URL + 'Business_Update', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    BranchList(data) {\n      return this.http.post(this.API_URL + 'UserBranchList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    OwnerList(data) {\n      return this.http.post(this.API_URL + 'OwnerList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    BusinessList(data) {\n      return this.http.post(this.API_URL + 'BusinessList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    UserList(data) {\n      return this.http.post(this.API_URL + 'UserList', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    PaymentDetails(data) {\n      return this.http.post(this.API_URL + 'PaymentDetails', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    BuyerBusinessMonthlyReports(data) {\n      return this.http.post(this.API_URL + 'BuyerBusinessMonthlyReports', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n    SellerBusinessMonthlyReports(data) {\n      return this.http.post(this.API_URL + 'SellerBusinessMonthlyReports', data, httpOptions).pipe(map(res => res), catchError(err => of(err)));\n    }\n\n  }\n\n  CustomerManagementService.ɵfac = function CustomerManagementService_Factory(t) {\n    return new (t || CustomerManagementService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  CustomerManagementService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomerManagementService,\n    factory: CustomerManagementService.ɵfac,\n    providedIn: 'root'\n  });\n  return CustomerManagementService;\n})();","map":null,"metadata":{},"sourceType":"module"}